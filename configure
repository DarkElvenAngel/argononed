#!/bin/sh

# MIT License

# Copyright (c) 2020 DarkElvenAngel

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# determine if we should use '-e' for echo command
TEST_FOR_E=`echo -e 'E'`
[ "$TEST_FOR_E" = '-e E' ] && ECHO="echo" || ECHO="echo -e"

[ -f makefile.conf ] && { $ECHO "\033[31mERROR\033[0;1m: makefile.conf already exists. run make mrproper first!\033[0m"; exit 1;}

[ -d build ] || mkdir build
$ECHO  "\033[37;1mARGON ONE DAEMON CONFIGURING ...\033[0m"

if [ "x$TARGET_DISTRO" != "x" ]
then
    DISTRO=$TARGET_DISTRO
else
    DISTRO=$( sh getdistro.sh )
fi

STATUS=UNKNOWN
I2CHELPER=0
PACKAGESYS=0
INITSYS="SYSTEMD"
[ "x$BOOTLOC" = "x" ] && BOOTLOC="/boot"

$ECHO -n "\033[1mDistro check [$DISTRO] : \033[0m"
if [ -d "OS/$DISTRO" ]
then 
    [ -f "OS/$DISTRO/OS.conf" ] && . OS/$DISTRO/OS.conf
    case $STATUS in
    "OK")
        COLOUR=32
        ;;
    "EXPERIMENTAL")
        COLOUR=33
        ;;
    *)
        COLOUR=31
        ;;
    esac
    $ECHO "\033[${COLOUR};1m${STATUS}\033[0m" 
else
    $ECHO "\033[33;1mWARNING: UNKNOWN DISTRO, The installer may not work\033[0m"
fi

$ECHO "\033[1mSYSTEM CHECK\033[0m"
$ECHO -n "gcc : "
command -v gcc >/dev/null 2>&1 && GCC=1 || GCC=0
[ $GCC = 1 ] && $ECHO "\033[32mOK\033[0m" || $ECHO "\033[31mERR\033[0m"
$ECHO -n "dtc : "
command -v dtc > /dev/null 2>&1 && DTC=1 || DTC=0
[ $DTC = 1 ] && $ECHO "\033[32mOK\033[0m" || $ECHO "\033[31mERR\033[0m"
$ECHO -n "make : "
command -v make >/dev/null 2>&1 && MAKE=1 || MAKE=0
[ $MAKE = 1 ] && $ECHO "\033[32mOK\033[0m" || $ECHO "\033[31mERR\033[0m"

if [ $PACKAGESYS = 1 ]
then
    I2CBUS=1
else
    $ECHO -n "I2C Bus check : "
    [ -c /dev/i2c-1 ] && { I2CBUS=1 ; $ECHO  "\033[32mENABLED\033[0m";} || { I2CBUS=0 ; $ECHO  "\033[1mNOT ENABLED\033[0m";}
    $ECHO  "\033[1;37mCHECKING OPTIONAL SYSTEMS\033[0m"
    $ECHO -n "bash-autocomplete : "
    [ -d /etc/bash_completion.d ] && { AUTOC=1 ; $ECHO "\033[32mOK\033[0m";} || { AUTOC=0 ; $ECHO "\033[1mNOT INSTALLED\033[0m";}
    $ECHO -n "logrotate : "
    command -v logrotate  >/dev/null 2>&1 && LOGROTATE=1 || LOGROTATE=0
    [ $LOGROTATE = 1 ] && $ECHO "\033[32mINSTALLED\033[0m" || $ECHO "\033[1mNOT INSTALLED\033[0m"
fi

$ECHO -n "\033[1mDependency Check : \033[0m"
if [ `expr $GCC + $DTC + $MAKE` = 3 ]
then
    $ECHO  "\033[32mSuccessful\033[0m"
else
    $ECHO  "\033[1;31mFailed! Please install the missing tool(s)\033[0m"
    exit 1
fi

echo "# DO NOT EDIT THIS FILE BY HAND PLEASE RUN ./configure" > makefile.conf
echo "CONFIGURED=1" >> makefile.conf
echo "DISTRO=${DISTRO}" >> makefile.conf
echo "BOOTLOC=${BOOTLOC}" >> makefile.conf
echo "INITSYS=${INITSYS}" >> makefile.conf
echo "I2CHELPER=${I2CHELPER}" >> makefile.conf
if [ $PACKAGESYS = 1 ]
then
    echo "PACKAGESYS=ENABLED" >> makefile.conf
else
    echo "AUTOCOMP=${AUTOC}" >> makefile.conf
    echo "I2CBUS=${I2CBUS}" >> makefile.conf
    echo "LOGROTATE=${LOGROTATE}" >> makefile.conf
fi
if [ "x$DISABLE_POWERBUTTON" != "x" ]
then
    $ECHO "Power Button is \033[1mDISABLED\033[0m"
    echo "DISABLE_POWER_BUTTON_SUPPORT=1" >> makefile.conf
fi
if [ "x$USE_SYSFS_TEMP" != "x" ]
then

    $ECHO "Daemon will use \033[1m${USE_SYSFS_TEMP}\033[0m for temperature sensor"
    echo "USE_SYSFS_TEMP=${USE_SYSFS_TEMP}" >> makefile.conf
fi
if [ "x$RUN_IN_FOREGROUND" != "x" ]
then
    $ECHO "Daemon will use run only in foreground and not fork"
    echo "RUN_IN_FOREGROUND=1" >> makefile.conf
fi
exit 0
